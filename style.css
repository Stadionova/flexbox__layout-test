.parent {
  display: flex;
  background-color: rgb(173, 129, 62);
  border: 1px solid brown;
  /* width: 1200px;
  height: 100%; */
  flex-flow: column;
  /* элементы не перепрыгивают на новую строку */
  flex-flow: row nowrap;
  justify-content: center;
  /* элементы перепрыгивают на новую строку */
  flex-flow: row wrap;
}

.child {
  background-color: wheat;
  border: 1px black;
  /* width: 100%; */
  /* width: 50px;
  height: 20px; */
  margin-right: 10px;
  text-align: center;
  margin-bottom: 10px;
}

.first {
  float: left;
  display: block;
  width: 300px;
  border: 1px solid blue;
  margin: 2px;
}

.second {
  float: left;
  display: block;
  width: 300px;
  border: 1px solid blue;
  margin: 2px;
}

.parentDiv {
  position: relative;
  background: rgb(121, 116, 116);
  height: 300px;
}

.child-div {
  position: absolute;
  bottom: 0;
  background: rgb(136, 73, 73);
  height: 200px;
  width: 400px;
}

.first-block {
  margin-bottom: 20px;
}

.inside-child {
  bottom: 0;
  position: absolute;
}

.wrapp {
  position: relative;
  margin: 0 auto;
  width: 200px;
  height: 200px;
  border: 1px solid black;
  background: rgb(170, 139, 199);
  margin-top: 20px;
}

.centerDiv {
  position: absolute;
}

/* grid layout */

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
}

body {
  font-family: "Nunito", sans-serif;
  color: #333;
  font-weight: 300;
  line-height: 1.6;
}

.container {
  width: 60%;
  margin: 2rem auto;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 5vw);
  grid-gap: 15px;
  border: 1px solid;
  margin-top: 20px;
}

.gallery__img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Установив для object-fit значение cover, 
как задаем размер фонового изображения таким образом, 
чтобы покрывать элемент. Мы делаем это, чтобы изображение 
могло заполнять высоту и ширину своего блока (элемента сетки), 
сохраняя его соотношение сторон. */
/* Свойство object-fit работает только в том случае, 
если мы устанавливаем свойства width и height. */

.gallery-items {
  margin: 0;
}

.gallery__item--1 {
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 3;
}

.gallery__item--2 {
  grid-column-start: 3;
  grid-column-end: 5;
  grid-row-start: 1;
  grid-row-end: 3;
}

.gallery__item--3 {
  grid-column-start: 5;
  grid-column-end: 9;
  grid-row-start: 1;
  grid-row-end: 6;
}

.gallery__item--4 {
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 3;
  grid-row-end: 6;
}

.gallery__item--5 {
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 6;
  grid-row-end: 9;
}

.gallery__item--6 {
  grid-column-start: 5;
  grid-column-end: 9;
  grid-row-start: 6;
  grid-row-end: 9;
}

@media (max-width: 480px) {
  .gallery {
    display: block;
  }
}

@media (max-width: 800px) {
  .gallery {
    grid-template-columns: repeat(4, 1fr);
    grid-row-gap: 5px;
  }

  .gallery__item--1 {
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 4;
  }

  .gallery__item--2 {
    grid-column-start: 3;
    grid-column-end: 5;
    grid-row-start: 1;
    grid-row-end: 4;
  }

  .gallery__item--3 {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 4;
    grid-row-end: 10;
  }

  .gallery__item--4 {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 10;
    grid-row-end: 16;
  }

  .gallery__item--5 {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 16;
    grid-row-end: 22;
  }

  .gallery__item--6 {
    grid-column-start: 1;
    grid-column-end: 5;
    grid-row-start: 22;
    grid-row-end: 27;
    margin-bottom: 0px;
  }
}